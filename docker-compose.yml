version: "3.8"

services:
  backend:
    build: ./server
    container_name: labstation-backend
    restart: unless-stopped
    env_file:
      - ./server/.env.production
    networks:
      - labstation-network
      - traefik-public
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`labstation.dev`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=5000"

  frontend:
    build: ./client
    container_name: labstation-frontend
    restart: unless-stopped
    networks:
      - labstation-network
      - traefik-public
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`labstation.dev`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.services.dashboard.loadbalancer.server.port=80"

  postgres:
    image: postgres:16-alpine
    container_name: labstation-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: labstation_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: bfeb5d8f45473d92e0cd51055c6fce19
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - labstation-network

networks:
  labstation-network:
    driver: bridge
  traefik-public:
    external: true

volumes:
  postgres_data:
